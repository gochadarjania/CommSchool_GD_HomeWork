// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week_18_JWT.Data;

namespace Week_18_JWT.Data.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RoleUserWithRole", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UserWithRolesId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UserWithRolesId");

                    b.HasIndex("UserWithRolesId");

                    b.ToTable("RoleUserWithRole");
                });

            modelBuilder.Entity("Week_18_JWT.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Tbilisi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        },
                        new
                        {
                            Id = 2,
                            City = "Khutaisi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        },
                        new
                        {
                            Id = 3,
                            City = "Batumi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        });
                });

            modelBuilder.Entity("Week_18_JWT.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<double>("WorkExperince")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AddressId = 1,
                            CreateDate = new DateTime(2022, 6, 16, 18, 19, 13, 81, DateTimeKind.Local).AddTicks(3976),
                            FirstName = "TestName1",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName1",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 2,
                            CreateDate = new DateTime(2022, 6, 16, 18, 19, 13, 82, DateTimeKind.Local).AddTicks(2050),
                            FirstName = "TestName2",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName2",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 3,
                            CreateDate = new DateTime(2022, 6, 16, 18, 19, 13, 82, DateTimeKind.Local).AddTicks(2066),
                            FirstName = "TestName3",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName3",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        });
                });

            modelBuilder.Entity("Week_18_JWT.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "ReportsAdmin"
                        });
                });

            modelBuilder.Entity("Week_18_JWT.Domain.UserWithRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserWithRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Test First 1",
                            LastName = "Test Last 1",
                            Password = "test123",
                            Username = "test123"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Test First 2",
                            LastName = "Test Last 2",
                            Password = "test123",
                            Username = "test123"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Test First 3",
                            LastName = "Test Last 3",
                            Password = "test123",
                            Username = "test123"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Test First 4",
                            LastName = "Test Last 4",
                            Password = "test123",
                            Username = "test123"
                        });
                });

            modelBuilder.Entity("RoleUserWithRole", b =>
                {
                    b.HasOne("Week_18_JWT.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Week_18_JWT.Domain.UserWithRole", null)
                        .WithMany()
                        .HasForeignKey("UserWithRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Week_18_JWT.Domain.Person", b =>
                {
                    b.HasOne("Week_18_JWT.Domain.Address", null)
                        .WithMany("Persons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Week_18_JWT.Domain.Address", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
