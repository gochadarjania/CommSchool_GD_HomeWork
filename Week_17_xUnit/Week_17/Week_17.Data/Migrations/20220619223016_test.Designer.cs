// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week_17.Data;

namespace Week_17.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220619223016_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Week_17.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            City = "Tbilisi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        },
                        new
                        {
                            Id = 4,
                            City = "Khutaisi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        },
                        new
                        {
                            Id = 5,
                            City = "Batumi",
                            Country = "Georgia",
                            HomeNumber = "55223366"
                        });
                });

            modelBuilder.Entity("Week_17.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<double>("WorkExperince")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AddressId = 4,
                            CreateDate = new DateTime(2022, 6, 20, 2, 30, 15, 771, DateTimeKind.Local).AddTicks(8486),
                            FirstName = "TestName1",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName1",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 5,
                            CreateDate = new DateTime(2022, 6, 20, 2, 30, 15, 772, DateTimeKind.Local).AddTicks(6763),
                            FirstName = "TestName2",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName2",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        },
                        new
                        {
                            Id = 5,
                            AddressId = 3,
                            CreateDate = new DateTime(2022, 6, 20, 2, 30, 15, 772, DateTimeKind.Local).AddTicks(6778),
                            FirstName = "TestName3",
                            JobPosition = "Junior Developer",
                            LastName = "TestLastName3",
                            Salary = 500.0,
                            WorkExperince = 1.0
                        });
                });

            modelBuilder.Entity("Week_17.Domain.Person", b =>
                {
                    b.HasOne("Week_17.Domain.Address", null)
                        .WithMany("Persons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Week_17.Domain.Address", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
